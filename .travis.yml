language: python

#To be removed once testing is finished
notifications:
  email: false

#branches:
#  only:
#  - master

sudo: false
dist: trusty

env:
#  - HOST_CLOUD=openstack
  - HOST_CLOUD=gce
#  - HOST_CLOUD=aws

before_install:
  #Decrypt secrets
  - >
    openssl aes-256-cbc
    -K $encrypted_92e1e3eadcc5_key
    -iv $encrypted_92e1e3eadcc5_iv
    -in keys.enc
    -out keys.tgz
    -d
  
  #Extract secrets
  - tar xzvf keys.tgz
  
  #Add the keypair to the agent
  - eval "$(ssh-agent -s)"
  - ssh-add keys/id_rsa
  
  #Get secrets
  - git clone git@github.com:mcapuccini/secrets-kubenow.git secrets-kubenow

install:
  #INSTALL DEPS

  #Packer
  - >
      curl
      https://releases.hashicorp.com/packer/0.12.3/packer_0.12.3_linux_amd64.zip
      > ./packer.zip
  - unzip ./packer.zip

  - export PATH=$PATH:/usr/local/packer/bin:$PWD
  
  #Jinja2 and its line interface
  - pip install --upgrade pip
  - pip install Jinja2
  - pip install j2cli
  
before_script:
  #Source RC file for OpenStack
  - source secrets-kubenow/host_cloud/CityCloud.sh

  #Set necessary environmental variables

  # Variable common to all three platforms
  - export current_version=v$(git describe --tags --always | tr -d .)

  # Variable needed only for GCE
  - export playbook_dir=./

  #Render templates from tmp/secrets-kubenow/packer into tmp/packer
  - env | j2 --format=env secrets-kubenow/packer/"$HOST_CLOUD".json.j2 > secrets-kubenow/packer/"$HOST_CLOUD".json
  
  #Checking whether or not current version is tagged as release
  #- export regex="^v[0-9]{3}([ab][0-9]{1,}|rc[0-9]{1,})?$"

  - echo -e '#!/bin/bash \nif [[ $current_version =~ ^v[0-9]{3}([ab][0-9]{1,}|rc[0-9]{1,})?$ ]]; then \n\techo Current version tagged as release\nelse \n\texport current_version="current"\nfi\necho Current version is:$current_version' > script.sh

  - chmod +x script.sh
  
  - source script.sh
    

script:
  - packer build -force -var-file=secrets-kubenow/packer/"$HOST_CLOUD".json build-"$HOST_CLOUD".json


#!/bin/bash \nif [[ $current_version =~ $regex ]]; then \n\techo "Current version tagged as release"\nelse \n\texport current_version="current"\nfi\necho "Current version is: $current_version"

